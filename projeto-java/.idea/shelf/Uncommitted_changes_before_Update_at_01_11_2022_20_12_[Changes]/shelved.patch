Index: ../README.md
===================================================================
diff --git a/../README.md b/../README.md
deleted file mode 100644
--- a/../README.md	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ /dev/null	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
@@ -1,2 +0,0 @@
-# aplicacao-java
-Reposit√≥rio designado para armazenar os scripts feitos em JAVA
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>C:\\Users\\lmsoares1\\OneDrive - Stefanini\\Desktop\\PI\\aplicacao-java\\projeto-java\\src\\main\\java\\usecase\\StartLooca.java\nC:\\Users\\lmsoares1\\OneDrive - Stefanini\\Desktop\\PI\\aplicacao-java\\projeto-java\\src\\main\\java\\aplication\\App.java\nC:\\Users\\lmsoares1\\OneDrive - Stefanini\\Desktop\\PI\\aplicacao-java\\projeto-java\\src\\main\\java\\database\\ConexaoComBanco.java\nC:\\Users\\lmsoares1\\OneDrive - Stefanini\\Desktop\\PI\\aplicacao-java\\projeto-java\\src\\main\\java\\usecase\\TimerSchedulePeriod.java\nC:\\Users\\lmsoares1\\OneDrive - Stefanini\\Desktop\\PI\\aplicacao-java\\projeto-java\\src\\main\\java\\aplication\\TelaLogin.java\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1667344172989)
@@ -1,5 +1,5 @@
-C:\Users\lmsoares1\OneDrive - Stefanini\Desktop\PI\aplicacao-java\projeto-java\src\main\java\usecase\StartLooca.java
-C:\Users\lmsoares1\OneDrive - Stefanini\Desktop\PI\aplicacao-java\projeto-java\src\main\java\aplication\App.java
-C:\Users\lmsoares1\OneDrive - Stefanini\Desktop\PI\aplicacao-java\projeto-java\src\main\java\database\ConexaoComBanco.java
-C:\Users\lmsoares1\OneDrive - Stefanini\Desktop\PI\aplicacao-java\projeto-java\src\main\java\usecase\TimerSchedulePeriod.java
-C:\Users\lmsoares1\OneDrive - Stefanini\Desktop\PI\aplicacao-java\projeto-java\src\main\java\aplication\TelaLogin.java
+/home/matheuspatricio/Documentos/projeto-b/aplicacao-java/projeto-java/src/main/java/usecase/StartApi.java
+/home/matheuspatricio/Documentos/projeto-b/aplicacao-java/projeto-java/src/main/java/aplication/TelaLogin.java
+/home/matheuspatricio/Documentos/projeto-b/aplicacao-java/projeto-java/src/main/java/usecase/TimerSchedulePeriod.java
+/home/matheuspatricio/Documentos/projeto-b/aplicacao-java/projeto-java/src/main/java/database/Queries.java
+/home/matheuspatricio/Documentos/projeto-b/aplicacao-java/projeto-java/src/main/java/database/ConexaoComBanco.java
Index: src/main/java/database/ConexaoComBanco.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\n\nimport aplication.TelaLogin;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport javax.swing.JOptionPane;\nimport usecase.StartApi;\n\npublic class ConexaoComBanco {\n\n    private StartApi startApi = new StartApi();\n    private String url = \"jdbc:mysql://localhost:3306/Beehive\";\n    private String user = \"root\";\n    private String password = \"123456\";\n    private Connection con = null;\n    private PreparedStatement ps = null;\n    private ResultSet resultSet = null;\n    private Statement st = null;\n\n    public ConexaoComBanco() {\n    }\n\n    public void conectarMySQL() {\n        try {\n            System.out.println(\"Abrindo conexao com o banco ...\");\n            con = DriverManager.getConnection(url, user, password);\n            System.out.println(\"Conexao realizada com sucesso!\");\n        } catch (SQLException ex) {\n            System.out.println(\"Falha ao conectar com o banco!\" + ex.getMessage());\n        }\n\n    }\n\n    public boolean validarAcesso(String email, String senha, String token) {\n        TelaLogin telaLogin = new TelaLogin();\n        try {\n            ps = con.prepareStatement(\"select id_empresa,email, senha,token_acesso\\n\"\n                    + \"from empresa\\njoin maquina\\non fk_empresa = id_empresa where email\"\n                    + \" = ? and senha = ? and token_acesso = ?;\");\n            ps.setString(1, email);\n            ps.setString(2, senha);\n            ps.setString(3, token);\n            resultSet = ps.executeQuery();\n            int rowCount = 0;\n\n            while (resultSet.next()) {\n                rowCount++;\n                System.out.println(\"COUNT::\" + rowCount);\n                System.out.println(\"email:\" + resultSet.getString(\"email\"));\n                System.out.println(\"senha:\" + resultSet.getString(\"senha\"));\n                System.out.println(\"token_acesso:\" + resultSet.getString(\"token_acesso\"));\n                JOptionPane.showMessageDialog(telaLogin, \"Login efetuado com sucesso!\");\n                startApi.execute();\n\n            }\n\n            if (rowCount == 0) {\n                JOptionPane.showMessageDialog(telaLogin, \"Usu?rio n?o encontrado!\",\n                        \"ERRO!\", JOptionPane.ERROR_MESSAGE);\n            }\n        } catch (SQLException e) {\n            System.out.println(\"Erro ao executar o select!\" + e.getMessage());\n\n        }\n        return false;\n    }\n\n    public Connection getCon() {\n        return con;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/database/ConexaoComBanco.java b/src/main/java/database/ConexaoComBanco.java
--- a/src/main/java/database/ConexaoComBanco.java	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ b/src/main/java/database/ConexaoComBanco.java	(date 1667344172989)
@@ -13,7 +13,7 @@
 public class ConexaoComBanco {
 
     private StartApi startApi = new StartApi();
-    private String url = "jdbc:mysql://localhost:3306/Beehive";
+    private String url = "jdbc:mysql://172.17.0.2:3306/Beehive";
     private String user = "root";
     private String password = "123456";
     private Connection con = null;
@@ -55,11 +55,12 @@
                 System.out.println("token_acesso:" + resultSet.getString("token_acesso"));
                 JOptionPane.showMessageDialog(telaLogin, "Login efetuado com sucesso!");
                 startApi.execute();
+                telaLogin.hide();
 
             }
 
             if (rowCount == 0) {
-                JOptionPane.showMessageDialog(telaLogin, "Usu?rio n?o encontrado!",
+                JOptionPane.showMessageDialog(telaLogin, "Usuario nao encontrado!",
                         "ERRO!", JOptionPane.ERROR_MESSAGE);
             }
         } catch (SQLException e) {
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>projeto-java</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n\n        <maven.compiler.source>18</maven.compiler.source>\n        <maven.compiler.target>18</maven.compiler.target>\n\n    </properties>\n <dependencies>\n     <dependency>\n         <groupId>com.github.britooo</groupId>\n         <artifactId>looca-api</artifactId>\n         <version>1.0.3</version>\n     </dependency>\n     <dependency>\n         <groupId>mysql</groupId>\n         <artifactId>mysql-connector-java</artifactId>\n         <version>8.0.30</version>\n     </dependency>\n </dependencies>\n <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>3.4.2</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <mainClass>aplication.TelaLogin</mainClass>\n                        </manifest>\n                    </archive>\n                    <descriptorRefs>\n                        <descriptorRef>jar-with-dependencies</descriptorRef>\n                    </descriptorRefs>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>make-assembly</id> <!-- this is used for inheritance merges -->\n                        <phase>package</phase> <!-- bind to the packaging phase -->\n                        <goals>\n                            <goal>single</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ b/pom.xml	(date 1667344172989)
@@ -10,8 +10,8 @@
 
     <properties>
 
-        <maven.compiler.source>18</maven.compiler.source>
-        <maven.compiler.target>18</maven.compiler.target>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
 
     </properties>
  <dependencies>
Index: src/main/java/usecase/StartApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\n */\npackage usecase;\n\nimport com.github.britooo.looca.api.core.Looca;\nimport database.ConexaoComBanco;\nimport database.Queries;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\npublic class StartApi {\n\n    public void execute() {\n        Looca looca = new Looca();\n        ConexaoComBanco con = new ConexaoComBanco();\n        con.conectarMySQL();\n        Queries queries = new Queries(con);\n\n        String arquitetura = \"x\" + looca.getSistema().getArquitetura().toString();\n        String sistemaOperacional = looca.getSistema().getSistemaOperacional().toString();\n        Double memoriaTotal = looca.getMemoria().getTotal().doubleValue();\n        Double discoTotal = looca.getGrupoDeDiscos().getTamanhoTotal().doubleValue();\n        String processador = looca.getProcessador().getNome();\n        String host_name = \"77777745454mls\";\n        String token = \"138e813kj1323\";\n        String tipo = \"servidor\";\n       // queries.update(memoriaTotal, discoTotal, arquitetura, sistemaOperacional, processador, token);\n        \n        queries.selectAll();\n       // queries.selectBySetor(\"disco_uso\", \"triagem\");\n        //queries.selectByMaquina(host_name);\n        //queries.insertDadosMaquina(host_name, token, tipo, memoriaTotal, discoTotal, arquitetura, sistemaOperacional,processador,\"cirurgia\",3);\n\n        Timer timer = new Timer(\"Timer\");\n        final long segundos = (1000 * 3);\n        TimerTask task = new TimerTask() {\n            Double memoriaUsada = null;\n            Integer  cpuUsada = null;\n            Double discoTotal = null;\n            Double discoDisponivel = null;\n            Double discoUsado = null;\n            \n\n            @Override\n            public void run() {\n                System.out.println(\"------------------------------------ \\n\");\n                System.out.println(\"Cpu:\" +cpuUsada+\"%\");\n                System.out.println(\"Memoria ram:\"+memoriaUsada);\n                System.out.println(\"Disco Total:\" +discoTotal);\n                System.out.println(\"Disco Usado:\" +discoUsado);\n                System.out.println(\"Disco Disponivel:\" +discoDisponivel);\n                System.out.println(\"------------------------------------ \\n\");\n                memoriaUsada = looca.getMemoria().getEmUso().doubleValue();\n                cpuUsada = looca.getProcessador().getUso().intValue();\n                discoTotal = looca.getGrupoDeDiscos().getVolumes().get(0).getTotal().doubleValue();\n                discoDisponivel = looca.getGrupoDeDiscos().getVolumes().get(0).getDisponivel().doubleValue();\n                discoUsado = discoTotal - discoDisponivel;\n                queries.insertRegistro(101L,memoriaUsada, cpuUsada, discoUsado, \"amarelo\");\n                \n            }\n            \n        };\n        timer.scheduleAtFixedRate(task, 2, segundos);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/usecase/StartApi.java b/src/main/java/usecase/StartApi.java
--- a/src/main/java/usecase/StartApi.java	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ b/src/main/java/usecase/StartApi.java	(date 1667344172989)
@@ -7,6 +7,8 @@
 import com.github.britooo.looca.api.core.Looca;
 import database.ConexaoComBanco;
 import database.Queries;
+import utils.Conversor;
+
 import java.util.Timer;
 import java.util.TimerTask;
 
@@ -15,54 +17,64 @@
     public void execute() {
         Looca looca = new Looca();
         ConexaoComBanco con = new ConexaoComBanco();
+        Conversor conversor = new Conversor();
         con.conectarMySQL();
         Queries queries = new Queries(con);
+        long prefixo = conversor.getMEBI();
 
         String arquitetura = "x" + looca.getSistema().getArquitetura().toString();
-        String sistemaOperacional = looca.getSistema().getSistemaOperacional().toString();
-        Double memoriaTotal = looca.getMemoria().getTotal().doubleValue();
-        Double discoTotal = looca.getGrupoDeDiscos().getTamanhoTotal().doubleValue();
+        String sistemaOperacional = looca.getSistema().getSistemaOperacional();
+        Long memoriaTotal = conversor.formatarUnidades(looca.getMemoria().getTotal(), prefixo);
+        Long discoTotal = conversor.formatarUnidades(looca.getGrupoDeDiscos().getTamanhoTotal(), prefixo);
         String processador = looca.getProcessador().getNome();
         String host_name = "77777745454mls";
         String token = "138e813kj1323";
         String tipo = "servidor";
-       // queries.update(memoriaTotal, discoTotal, arquitetura, sistemaOperacional, processador, token);
-        
-        queries.selectAll();
-       // queries.selectBySetor("disco_uso", "triagem");
+        queries.update(memoriaTotal, discoTotal, arquitetura, sistemaOperacional, processador, token);
+        // queries.selectAll();
+        // queries.selectBySetor("disco_uso", "triagem");
         //queries.selectByMaquina(host_name);
         //queries.insertDadosMaquina(host_name, token, tipo, memoriaTotal, discoTotal, arquitetura, sistemaOperacional,processador,"cirurgia",3);
 
         Timer timer = new Timer("Timer");
         final long segundos = (1000 * 3);
         TimerTask task = new TimerTask() {
-            Double memoriaUsada = null;
-            Integer  cpuUsada = null;
-            Double discoTotal = null;
-            Double discoDisponivel = null;
-            Double discoUsado = null;
-            
-
+            Long memoriaUsada = null;
+            Long cpuUsada = null;
+            Long discoTotal = null;
+            Long discoDisponivel = null;
+            Long discoUsado = null;
+            String alert = "";
             @Override
             public void run() {
-                System.out.println("------------------------------------ \n");
-                System.out.println("Cpu:" +cpuUsada+"%");
-                System.out.println("Memoria ram:"+memoriaUsada);
-                System.out.println("Disco Total:" +discoTotal);
-                System.out.println("Disco Usado:" +discoUsado);
-                System.out.println("Disco Disponivel:" +discoDisponivel);
-                System.out.println("------------------------------------ \n");
-                memoriaUsada = looca.getMemoria().getEmUso().doubleValue();
-                cpuUsada = looca.getProcessador().getUso().intValue();
-                discoTotal = looca.getGrupoDeDiscos().getVolumes().get(0).getTotal().doubleValue();
-                discoDisponivel = looca.getGrupoDeDiscos().getVolumes().get(0).getDisponivel().doubleValue();
-                discoUsado = discoTotal - discoDisponivel;
-                queries.insertRegistro(101L,memoriaUsada, cpuUsada, discoUsado, "amarelo");
-                
-            }
-            
+                Long valorMemoriaUsada = looca.getMemoria().getEmUso();
+                memoriaUsada = conversor.formatarUnidades(valorMemoriaUsada, prefixo);
+
+                Long memoriaPercentual = 0L;
+                Long memoriaTotal = conversor.formatarUnidades(looca.getMemoria().getTotal(), prefixo);
+                memoriaPercentual = (memoriaUsada * 100) / memoriaTotal;
+
+                Long valorCpuUsada = looca.getProcessador().getUso().longValue();
+                cpuUsada = valorCpuUsada;
+
+                if (cpuUsada >= 90 || memoriaPercentual >= 90) {
+                    alert = "Vermelho";
+                } else if (cpuUsada >= 80 || memoriaPercentual >= 80) {
+                    alert = "Amarelo";
+                } else {
+                    alert = "Verde";
+                }
+
+                Long valorDiscoUsado = looca.getGrupoDeDiscos().getVolumes().get(0).getTotal() - looca.getGrupoDeDiscos().getVolumes().get(0).getDisponivel();
+                discoUsado = conversor.formatarUnidades(valorDiscoUsado, prefixo);
+
+                queries.insertRegistro(memoriaUsada, cpuUsada, discoUsado, alert);
+
+            }
+
         };
-        timer.scheduleAtFixedRate(task, 2, segundos);
+        timer.scheduleAtFixedRate(task, 0, segundos);
     }
 
 }
+
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>usecase\\TimerSchedulePeriod.class\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision 0869209102a1b2b9b34b0033ea191054772a996b)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1667344172989)
@@ -1,1 +1,12 @@
-usecase\TimerSchedulePeriod.class
+usecase/TimerSchedulePeriod.class
+aplication/TelaLogin$1.class
+database/ConexaoComBanco.class
+aplication/TelaLogin$6.class
+aplication/TelaLogin$5.class
+aplication/TelaLogin.class
+aplication/TelaLogin$4.class
+usecase/StartApi.class
+database/Queries.class
+usecase/StartApi$1.class
+aplication/TelaLogin$2.class
+aplication/TelaLogin$3.class
